// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiApp.DataAccess;

namespace TaxiApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191119120211_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxiApp.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3123e3ed-186e-4349-a173-c503d8cc3261"),
                            FullName = "Алиса Александровна"
                        },
                        new
                        {
                            Id = new Guid("83068744-d558-45b0-ae77-cfb5af7b7c7a"),
                            FullName = "Иванов Иван"
                        },
                        new
                        {
                            Id = new Guid("43d4d893-5975-45cb-a807-10c30042b356"),
                            FullName = "Сергей Шмитд"
                        });
                });

            modelBuilder.Entity("TaxiApp.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Car")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("664aafc9-da7a-46e9-9315-fe205f373675"),
                            Car = "Nissan 203",
                            FullName = "Петрович Петров"
                        },
                        new
                        {
                            Id = new Guid("15cb449a-83f2-4060-bd0c-cdd10c9a7dd9"),
                            Car = "Lexus 111",
                            FullName = "Алексей Алексеевич"
                        });
                });

            modelBuilder.Entity("TaxiApp.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("TaxiApp.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EndLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StartLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("TaxiApp.Models.Client", b =>
                {
                    b.HasOne("TaxiApp.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("TaxiApp.Models.Order", b =>
                {
                    b.HasOne("TaxiApp.Models.Driver", null)
                        .WithMany("Orders")
                        .HasForeignKey("DriverId");

                    b.HasOne("TaxiApp.Models.Location", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("TaxiApp.Models.Location", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
